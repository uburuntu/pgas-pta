import csv
from enum import Enum
from operator import itemgetter

from gspread.utils import rowcol_to_a1


def range_grid(cell_start, cell_end):
    ''' range_grid((1,1),(3,3)) = A1:C3 '''
    return f'{rowcol_to_a1(*cell_start)}:{rowcol_to_a1(*cell_end)}'


def csv_to_list(file_name):
    with open(file_name, 'r') as file:
        reader_users = csv.reader(file)
        return set(x[0] for x in list(reader_users))


def print_section(text):
    me = print_section
    if not hasattr(me, 'count'):
        me.count = 1
    print('--- {:>4}. {}'.format(me.count, text))
    me.count += 1


def print_subsection(text):
    me = print_subsection
    parent = print_section
    if not hasattr(me, 'count'):
        me.count = 1
    if not hasattr(me, 'last') or me.last != getattr(parent, 'count', 0):
        me.count = 1
        me.last = getattr(parent, 'count', 0)
    print('----- {:>4}. {}'.format(me.count, text))
    me.count += 1


class AchievementType(Enum):
    education = 'Учёба'
    science = 'Наука'
    social = 'Общественная деятельность'
    culture = 'Культура'
    sport = 'Спорт'
    unknown = 'Неизвестно'

    @staticmethod
    def user_type(achievements):
        def type_score(type):
            return sum([int(x['score']) if type == x['type'] else 0 for x in achievements])
        max_score = max([(x.value, type_score(x.value)) for x in AchievementType], key=itemgetter(1))
        return max_score[0] if max_score[1] != 0 else AchievementType.unknown.value

    @staticmethod
    def achievement_type(category):
        education = [
            'Диплом 3 степени за олимпиаду уровня 5',
            'Диплом 2 степени за олимпиаду уровня 5',
            'Диплом 1 степени за олимпиаду уровня 5',
            'Диплом 3 степени за олимпиаду уровня 4',
            'Диплом 2 степени за олимпиаду уровня 4',
            'Диплом 1 степени за олимпиаду уровня 4',
            'Диплом 3 степени за олимпиаду уровня 3',
            'Диплом 2 степени за олимпиаду уровня 3',
            'Диплом 1 степени за олимпиаду уровня 3',
            'Диплом 3 степени за олимпиаду уровня 2',
            'Диплом 2 степени за олимпиаду уровня 2',
            'Диплом 1 степени за олимпиаду уровня 2',
            'Диплом 3 степени за олимпиаду уровня 1',
            'Диплом 2 степени за олимпиаду уровня 1',
            'Диплом 1 степени за олимпиаду уровня 1',
        ]

        science = [
            'Грант',
            'Публикация иная(не относится к математике, физике или экономике)',
            'Публикация в издании университетского уровня(относится к математике/физике/экономике, но издание  не всеросссийского и не международного уровня)',
            'Публикация в издании всероссийского уровня(относится к математике, физике или экономике и издание из списка ВАК при Минобрнауки)',
            'Публикация в издании международного уровня(относится к математике/физике/экономике, а издание из баз Scopus или Springer)',
            'Награда на университетском уровне(в т.ч. за устное выступление с докладом)',
            'Награда на всероссийском уровне(в т.ч. за устное выступление с докладом)',
            'Награда на международном уровне(в т.ч. за устное выступление с докладом)',
            'патент/свидетельство',
            'Наука(иное)',
        ]

        social = [
            'Оформление локаций',
            'Оформление символики',
            'Помощник организатора среднего мероприятия(например, этап конкурса групп/чемпионат мехмата по гандболу/площадка на Фестивале Науки)',
            'Помощник организатора крупного мероприятия(например, день мехмата/день Пифагора)',
            'Главный организатор малого мероприятия(например, открытый кубок мехмата по шахматам/брейнринг на мехмате)',
            'Главный организатор среднего мероприятия(например, этап конкурса групп)',
            'Главный организатор крупного мероприятия(например, день Мехмата/день Пифагора)',
            'Приемная комиссия:дежурный на весенней олимпиаде',
            'Приемная комиссия:координатор весенней олимпиады',
            'Проверка олимпиады 3 уровня(матпраздник/др. олимпиады для младших школьников)',
            'Проверка олимпиады 2 уровня(матем. многоборье и т.п.)',
            'Проверка олимпиады 1 уровня(рег.этап Всероссийской олимпиады, Московская математическая и т.п.)',
            'Семестр малого мехмата',
            'куратор академической группы',
            'Летняя матшкола',
            'Другое(не нашел подходящей категории)',
            'Приемная комиссия(работа в часах)',
            'Конкурсовод',
        ]

        culture = [
            'Членство в сборной университетского уровня',
            'Членство в сборной городского уровня',
            'Членство в сборной регионального уровня',
            'Членство в сборной межрегионального уровня(в соревновании представлено хотя бы 3 субьекта РФ)',
            'Членство в сборной всероссийского уровня(в соревновании представлено хотя бы 3 федеральных округа РФ)',
            'Членство в сборной международного уровня(в соревновании представлено хотя бы 4 страны и хотя бы одна из них не с постсоветского пространства)',
            'Диплом 3 степени факультетского уровня',
            'Диплом 2 степени факультетского уровня',
            'Диплом 1 степени факультетского уровня(сборная курса)',
            'Диплом 3 степени университетского уровня',
            'Диплом 2 степени университетского уровня',
            'Диплом 1 степени университетского уровня',
            'Диплом 3 степени городского уровня',
            'Диплом 2 степени городского уровня',
            'Диплом 1 степени городского уровня',
            'Диплом 3 степени регионального уровня',
            'Диплом 2 степени регионального уровня',
            'Диплом 1 степени регионального уровня',
            'Диплом 3 степени межрегионального уровня',
            'Диплом 2 степени межрегионального уровня',
            'Диплом 1 степени межрегионального уровня',
            'Диплом 3 степени всероссийского уровня',
            'Диплом 2 степени всероссийского уровня',
            'Диплом 1 степени всероссийского уровня',
            'Диплом 3 степени международного уровня',
            'Диплом 2 степени международного уровня',
            'Диплом 1 степени международного уровня',
            'Помощник организатора интеллектуальной игры',
            'Организатор интеллектуальной игры',
            'Организатор выступления на Дне Пифагора',
            'участие в площадке Экспромта на Дне Мехмата/выступление на факультетском/университетском мероприятии',
            'Исполнитель главной роли на Дне Пифагора',
        ]

        sport = [
            'Членство в сборной университетского уровня',
            'Членство в сборной городского уровня',
            'Членство в сборной регионального уровня',
            'Членство в сборной межрегионального уровня(в соревновании представлено хотя бы 3 субьекта РФ)',
            'Членство в сборной всероссийского уровня(в соревновании представлено хотя бы 3 федеральных округа РФ)',
            'Членство в сборной международного уровня(в соревновании представлено хотя бы 4 страны и хотя бы одна из них не с постсоветского пространства)',
            'Диплом 3 степени факультетского уровня',
            'Диплом 2 степени факультетского уровня',
            'Диплом 1 степени факультетского уровня(сборная курса)',
            'Диплом 3 степени университетского уровня',
            'Диплом 2 степени университетского уровня',
            'Диплом 1 степени университетского уровня',
            'Диплом 3 степени городского уровня',
            'Диплом 2 степени городского уровня',
            'Диплом 1 степени городского уровня',
            'Диплом 3 степени регионального уровня',
            'Диплом 2 степени регионального уровня',
            'Диплом 1 степени регионального уровня',
            'Диплом 3 степени межрегионального уровня',
            'Диплом 2 степени межрегионального уровня',
            'Диплом 1 степени межрегионального уровня',
            'Диплом 3 степени всероссийского уровня',
            'Диплом 2 степени всероссийского уровня',
            'Диплом 1 степени всероссийского уровня',
            'Диплом 3 степени международного уровня',
            'Диплом 2 степени международного уровня',
            'Диплом 1 степени международного уровня',
        ]

        if category in education:
            return AchievementType.education.value
        if category in science:
            return AchievementType.science.value
        if category in social:
            return AchievementType.social.value
        if category in culture:
            return AchievementType.culture.value
        if category in sport:
            return AchievementType.sport.value

        print_subsection(f'[WARNING] Unknown achievement category: {category}')
        return AchievementType.unknown.value
